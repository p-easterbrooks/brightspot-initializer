/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.5
 * Generated at: 2016-01-13 17:03:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cms.WEB_002dINF.field;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.psddev.cms.tool.ToolPageContext;
import com.psddev.dari.db.Region;
import com.psddev.dari.db.ObjectField;
import com.psddev.dari.db.State;
import com.psddev.dari.util.HtmlWriter;
import com.psddev.dari.util.ObjectUtils;

public final class region_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;



// --- Logic ---

ToolPageContext wp = new ToolPageContext(pageContext);
State state = State.getInstance(request.getAttribute("object"));
ObjectField field = (ObjectField) request.getAttribute("field");
String fieldName = field.getInternalName();

Region region = (Region) state.getValue(fieldName);
if (region == null) {
    region = Region.empty();
}

String inputName = ((String) request.getAttribute("inputName")) + "/";
String geoJsonName = inputName + "geoJson";
String zoomName = inputName + "zoom";
String zoomStateName = fieldName + ".leaflet.zoom";
String centerName = inputName + "bounds";
String centerStateName = fieldName + ".leaflet.center";

if ((Boolean) request.getAttribute("isFormPost")) {
    region = Region.fromGeoJson(wp.param(geoJsonName));

    state.putValue(fieldName, region);
    state.put(centerStateName, wp.param(centerName));
    state.put(zoomStateName, wp.intParam(zoomName));

    return;
}

String center = (String) state.get(centerStateName);
if (center == null) {
    center = "{\"lat\":39.8282, \"lng\":-98.5795}";
}

Integer zoom = ObjectUtils.to(Integer.class, state.get(zoomStateName));
if (zoom == null) {
    zoom = 4;
}

pageContext.setAttribute("zoomName", zoomName);
pageContext.setAttribute("centerName", centerName);
pageContext.setAttribute("geoJsonName", geoJsonName);

// --- Presentation ---

      out.write("\n");
      out.write("\n");
      out.write("<div class=\"inputSmall\">\n");
      out.write("    <div class='regionMap'>\n");
      out.write("        <input class=\"regionMapZoom\" type=\"hidden\" name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${zoomName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" value=\"");
      out.print( wp.h(zoom) );
      out.write("\" />\n");
      out.write("        <input class=\"regionMapCenter\" type=\"hidden\" name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${centerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" value=\"");
      out.print( wp.h(center) );
      out.write("\" />\n");
      out.write("        <input class=\"regionMapGeoJson\" type=\"hidden\" name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${geoJsonName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" value=\"");
      out.print( wp.h(region.getGeoJson()) );
      out.write("\"/>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
