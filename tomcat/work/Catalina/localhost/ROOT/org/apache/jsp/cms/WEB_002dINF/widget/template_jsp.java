/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.5
 * Generated at: 2016-01-13 17:03:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cms.WEB_002dINF.widget;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.psddev.cms.db.Template;
import com.psddev.cms.tool.JspWidget;
import com.psddev.cms.tool.ToolPageContext;
import com.psddev.dari.db.Database;
import com.psddev.dari.db.State;
import java.util.List;
import java.util.UUID;

public final class template_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;



// --- Logic ---

ToolPageContext wp = new ToolPageContext(pageContext);
Object object = JspWidget.getOriginal(wp);
State objectState = State.getInstance(object);
Template.ObjectModification objectTemplateMod = objectState.as(Template.ObjectModification.class);

if (!Template.Static.findUsedTypes(wp.getSite()).contains(objectState.getType())) {
    return;
}

UUID objectId = objectState.getId();
String namePrefix = objectId + "/template/";
String defaultName = objectId + "default";

if (JspWidget.isUpdating(wp)) {
    objectTemplateMod.setDefault(Database.Static.findById(objectState.getDatabase(), Template.class, wp.uuidParam(defaultName)));
    return;
}

List<Template> usableTemplates = Template.Static.findUsable(object);

if (usableTemplates.isEmpty()) {
    return;
}

Template objectTemplate = objectTemplateMod.getDefault();
if (objectTemplate == null && usableTemplates.size() == 1) {
    objectTemplate = usableTemplates.get(0);
}

// --- Presentation ---


      out.write("<select name=\"");
      out.print( wp.h(defaultName) );
      out.write("\" style=\"width: 100%;\">\n");
      out.write("    <option>- AUTOMATIC -</option>\n");
      out.write("    ");
 for (Template template : usableTemplates) { 
      out.write("\n");
      out.write("        <option");
      out.print( template.equals(objectTemplate) ? " selected" : "" );
      out.write(" value=\"");
      out.print( template.getId() );
      out.write('"');
      out.write('>');
      out.print( wp.objectLabel(template) );
      out.write("</option>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("</select>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
